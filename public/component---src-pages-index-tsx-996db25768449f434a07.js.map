{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./src/pages/index.tsx","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js","webpack:///./src/components/Buttons/Buttons.tsx"],"names":["GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","handledProps","propTypes","create","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","withLayout","vertical","Link","pathname","location","items","menuItems","text","as","href","primary","size","src","alt","icon","name","ButtonContent","content","hidden","visible","isNil","ButtonGroup","attached","basic","buttons","compact","fluid","labeled","negative","positive","secondary","toggle","widths","button","ButtonOr","_Component","Button","_getPrototypeOf2","_this","this","_len","arguments","length","args","Array","_key","call","apply","concat","_this$props","label","_this$props2","disabled","tabIndex","ref","current","e","preventDefault","_this$props3","labelPosition","key","value","role","_this$props4","active","animated","circular","loading","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","computeTabIndex","buttonClasses","containerClasses","labelElement","Label","defaultProps","pointing","autoGenerateKey","onClick","handleClick","Ref","innerRef","undefined","Icon","hasChildren","computeButtonAriaRole","SocialButtons","render","Component"],"mappings":"sOASA,SAASA,EAAWC,GAClB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAWH,EAAMG,SACjBC,EAAQJ,EAAMI,MACdC,EAAUL,EAAMK,QAChBC,EAAcN,EAAMM,YACpBC,EAASP,EAAMO,OACfC,EAAOR,EAAMQ,KACbC,EAAYT,EAAMS,UAClBC,EAASV,EAAMU,OACfC,EAAYX,EAAMW,UAClBC,EAAgBZ,EAAMY,cACtBC,EAAab,EAAMa,WACnBC,EAAQd,EAAMc,MACdC,EAAU,IAAGX,EAAO,YAAWK,EAAW,aAAc,YAAgBD,EAAM,QAAS,YAAiBG,GAAY,YAAeN,EAAS,WAAY,YAAqBO,GAAgB,YAAaT,EAAU,iBAAkB,YAAaG,EAAa,qBAAsB,YAAaC,EAAQ,eAAgB,YAAaG,EAAQ,eAAgB,YAAaG,EAAY,mBAAoB,YAAaC,EAAO,QAAS,SAAUZ,GACpbc,EAAO,OAAAC,EAAA,GAAkBlB,EAAYC,GACrCkB,EAAc,OAAAC,EAAA,GAAepB,EAAYC,GAC7C,OAAO,IAAMoB,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACzDd,UAAWa,IACTd,GAGNF,EAAWsB,aAAe,CAAC,KAAM,WAAY,YAAa,QAAS,WAAY,UAAW,cAAe,SAAU,OAAQ,YAAa,SAAU,YAAa,gBAAiB,aAAc,SAC9LtB,EAAWuB,UA6CP,GACJvB,EAAWwB,OAAS,YAAuBxB,GAAY,SAAUE,GAC/D,MAAO,CACLA,SAAUA,MAGC,QC1Ef,SAASuB,EAAQxB,GACf,IAAIyB,EAAWzB,EAAMyB,SACjBxB,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBE,EAAQJ,EAAMI,MACdsB,EAAU1B,EAAM0B,QAChBC,EAAU3B,EAAM2B,QAChBnB,EAAOR,EAAMQ,KACboB,EAAW5B,EAAM4B,SACjBnB,EAAYT,EAAMS,UAClBE,EAAYX,EAAMW,UAClBC,EAAgBZ,EAAMY,cACtBG,EAAU,IAAGX,EAAO,YAAWqB,EAAU,YAAa,YAAWE,EAAS,WAAY,YAAWlB,EAAW,aAAc,YAAgBD,EAAM,QAAS,YAAgBoB,EAAU,YAAa,YAAiBjB,GAAY,YAAqBC,GAAgB,YAAac,EAAS,UAAU,GAAO,MAAOxB,GAChTc,EAAO,OAAAC,EAAA,GAAkBO,EAASxB,GAClCkB,EAAc,OAAAC,EAAA,GAAeK,EAASxB,GAC1C,OAAO,IAAMoB,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACzDd,UAAWa,IACTd,GAGNuB,EAAQH,aAAe,CAAC,KAAM,WAAY,WAAY,YAAa,QAAS,UAAW,UAAW,OAAQ,WAAY,YAAa,YAAa,iBAChJG,EAAQF,UAoCJ,GACW,QCxDf,SAASO,EAAK7B,GACZ,IAAI8B,EAAS9B,EAAM8B,OACfL,EAAWzB,EAAMyB,SACjBxB,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBwB,EAAU1B,EAAM0B,QAChBK,EAAY/B,EAAM+B,UAClBJ,EAAU3B,EAAM2B,QAChBK,EAAWhC,EAAMgC,SACjBC,EAAWjC,EAAMiC,SACjBC,EAASlC,EAAMkC,OACfC,EAAUnC,EAAMmC,QAChBP,EAAW5B,EAAM4B,SACjBQ,EAAYpC,EAAMoC,UAClB3B,EAAYT,EAAMS,UAClBE,EAAYX,EAAMW,UAClBC,EAAgBZ,EAAMY,cACtBG,EAAU,IAAG,KAAM,YAAWU,EAAU,YAAa,YAAWM,EAAW,aAAc,YAAWC,EAAU,YAAa,YAAWC,EAAU,YAAa,YAAWG,EAAW,aAAc,YAAW3B,EAAW,aAAc,YAAoBqB,EAAQ,UAAW,YAAoBH,EAAS,WAAY,YAAoBO,EAAQ,UAAW,YAAoBC,EAAS,WAAY,YAAgBP,EAAU,YAAa,YAAiBjB,GAAY,YAAqBC,GAAgB,YAAac,EAAS,UAAU,GAAO,OAAQxB,GAC7hBc,EAAO,OAAAC,EAAA,GAAkBY,EAAM7B,GAC/BkB,EAAc,OAAAC,EAAA,GAAeU,EAAM7B,GACvC,OAAO,IAAMoB,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACzDd,UAAWa,IACTd,GAGN4B,EAAKR,aAAe,CAAC,KAAM,SAAU,WAAY,WAAY,YAAa,UAAW,YAAa,UAAW,WAAY,WAAY,SAAU,UAAW,WAAY,YAAa,YAAa,YAAa,iBAC7MQ,EAAKQ,OAAS,EACdR,EAAKS,IAAM,EACXT,EAAKP,UAmDD,GACW,O,kCC5Ff,+IA8EeiB,uBAhEG,SAACvC,GAAD,OAChB,2BAEE,gBAAC,IAAD,CAASwC,UAAQ,EAACP,UAAQ,EAACtB,UAAU,SAAST,UAAU,YACtD,gBAAC,IAAD,CACEuC,KAAMA,OAAMC,SAAU1C,EAAM2C,SAASD,SAAUE,MAAOC,IAAWZ,UAAQ,IAE3E,gBAAC,IAAD,CAAWa,MAAI,GACb,gBAAC,IAAD,CAAQb,UAAQ,EAACc,GAAG,MAApB,wBACA,gBAAC,IAAD,CAAQd,UAAQ,EAACc,GAAG,MAApB,4DACA,gBAAC,IAAD,CAAQC,KAAK,QAAOC,SAAO,EAACC,KAAK,QAAjC,kBAKJ,gBAAC,IAAD,CAASV,UAAQ,EAACtC,UAAU,UAC1B,gBAAC,IAAD,CAAMkC,WAAS,EAACxB,cAAc,SAASV,UAAU,aAC/C,gBAAC,IAAKoC,IAAN,KACE,gBAAC,IAAKD,OAAN,CAAavB,MAAM,KACjB,gBAAC,IAAD,8CACA,yGAGA,gBAAC,IAAD,4BACA,qGAIF,gBAAC,IAAKuB,OAAN,CAAavB,MAAM,IAAIT,QAAQ,SAC7B,uBAAK8C,IAAK,yDAA0DC,IAAI,YAQhF,gBAAC,IAAD,CAASZ,UAAQ,EAACtC,UAAU,4BAC1B,gBAAC,IAAD,CAAMwB,QAAQ,IAAIf,UAAU,SAASgB,SAAO,EAACQ,SAAO,EAACC,WAAS,EAAClC,UAAU,aACvE,gBAAC,IAAKoC,IAAN,KACE,gBAAC,IAAKD,OAAN,KACE,gBAAC,IAAD,CAAQgB,MAAI,GACV,gBAAC,IAAD,CAAMC,KAAK,WADb,oBAIA,8FAIF,gBAAC,IAAKjB,OAAN,KACE,gBAAC,IAAD,CAAQgB,MAAI,GACV,gBAAC,IAAD,CAAMC,KAAK,WADb,0BAIA,4HAMP,gBAAC,IAAD,Y,wZCjEL,SAASC,EAAcvD,GACrB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBsD,EAAUxD,EAAMwD,QAChBC,EAASzD,EAAMyD,OACfC,EAAU1D,EAAM0D,QAChB3C,EAAU,IAAG,YAAW2C,EAAS,WAAY,YAAWD,EAAQ,UAAW,UAAWvD,GACtFc,EAAO,OAAAC,EAAA,GAAkBsC,EAAevD,GACxCkB,EAAc,OAAAC,EAAA,GAAeoC,EAAevD,GAChD,OAAO,IAAMoB,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACzDd,UAAWa,IACT,IAAc4C,MAAM1D,GAAYuD,EAAUvD,GAGhDsD,EAAclC,aAAe,CAAC,KAAM,WAAY,YAAa,UAAW,SAAU,WAClFkC,EAAcjC,UAkBV,GACW,Q,qBC/Bf,SAASsC,EAAY5D,GACnB,IAAI6D,EAAW7D,EAAM6D,SACjBC,EAAQ9D,EAAM8D,MACdC,EAAU/D,EAAM+D,QAChB9D,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBE,EAAQJ,EAAMI,MACd4D,EAAUhE,EAAMgE,QAChBR,EAAUxD,EAAMwD,QAChBnD,EAAUL,EAAMK,QAChB4D,EAAQjE,EAAMiE,MACdZ,EAAOrD,EAAMqD,KACbpB,EAAWjC,EAAMiC,SACjBiC,EAAUlE,EAAMkE,QAChBC,EAAWnE,EAAMmE,SACjBC,EAAWpE,EAAMoE,SACjBnB,EAAUjD,EAAMiD,QAChBoB,EAAYrE,EAAMqE,UAClBnB,EAAOlD,EAAMkD,KACboB,EAAStE,EAAMsE,OACf9B,EAAWxC,EAAMwC,SACjB+B,EAASvE,EAAMuE,OACfxD,EAAU,IAAG,KAAMX,EAAO8C,EAAM,YAAWY,EAAO,SAAU,YAAWE,EAAS,WAAY,YAAWC,EAAO,SAAU,YAAWZ,EAAM,QAAS,YAAWpB,EAAU,YAAa,YAAWiC,EAAS,WAAY,YAAWC,EAAU,YAAa,YAAWC,EAAU,YAAa,YAAWnB,EAAS,WAAY,YAAWoB,EAAW,aAAc,YAAWC,EAAQ,UAAW,YAAW9B,EAAU,YAAa,YAAoBqB,EAAU,YAAa,YAAexD,EAAS,WAAY,YAAakE,GAAS,UAAWrE,GAC5gBc,EAAO,OAAAC,EAAA,GAAkB2C,EAAa5D,GACtCkB,EAAc,OAAAC,EAAA,GAAeyC,EAAa5D,GAE9C,OAAI,IAAO+D,GACF,IAAM3C,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACzDd,UAAWa,IACT,IAAc4C,MAAM1D,GAAYuD,EAAUvD,GAGzC,IAAMmB,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACzDd,UAAWa,IACT,IAAKgD,GAAS,SAAUS,GAC1B,OAAO,EAAOjD,OAAOiD,OAIzBZ,EAAYvC,aAAe,CAAC,KAAM,WAAY,QAAS,UAAW,WAAY,YAAa,QAAS,UAAW,UAAW,UAAW,QAAS,OAAQ,WAAY,UAAW,WAAY,WAAY,UAAW,YAAa,OAAQ,SAAU,WAAY,UAC3PuC,EAAYtC,UAkER,GACW,QC9Gf,SAASmD,EAASzE,GAChB,IAAIE,EAAYF,EAAME,UAClB4C,EAAO9C,EAAM8C,KACb/B,EAAU,IAAG,KAAMb,GACnBc,EAAO,OAAAC,EAAA,GAAkBwD,EAAUzE,GACnCkB,EAAc,OAAAC,EAAA,GAAesD,EAAUzE,GAC3C,OAAO,IAAMoB,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACzDd,UAAWa,EACX,YAAa+B,KAIjB2B,EAASpD,aAAe,CAAC,KAAM,YAAa,QAC5CoD,EAASnD,UASL,GACW,QCJX,EAAsB,SAAUoD,GAGlC,SAASC,IACP,IAAIC,EAEAC,EAEJ,IAAgBC,KAAMH,GAEtB,IAAK,IAAII,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAgDzB,OA7CAP,EAAQ,IAA2BC,MAAOF,EAAmB,IAAgBD,IAASU,KAAKC,MAAMV,EAAkB,CAACE,MAAMS,OAAOL,KAEjI,IAAgB,IAAuBL,GAAQ,MAAO,uBAEtD,IAAgB,IAAuBA,GAAQ,sBAAsB,WACnE,IAAIW,EAAcX,EAAM7E,MACpB6D,EAAW2B,EAAY3B,SACvB4B,EAAQD,EAAYC,MACxB,IAAK,IAAO5B,KAAc,IAAO4B,GAAQ,MAAO,SAGlD,IAAgB,IAAuBZ,GAAQ,mBAAmB,SAAU3D,GAC1E,IAAIwE,EAAeb,EAAM7E,MACrB2F,EAAWD,EAAaC,SACxBC,EAAWF,EAAaE,SAC5B,OAAK,IAAOA,GACRD,GAAkB,EACF,QAAhBzE,EAA8B,OAAlC,EAF8B0E,KAKhC,IAAgB,IAAuBf,GAAQ,SAAS,WACtD,OAAO,IAAQA,EAAMgB,IAAIC,QAAS,YAGpC,IAAgB,IAAuBjB,GAAQ,eAAe,SAAUkB,GACvDlB,EAAM7E,MAAM2F,SAGzBI,EAAEC,iBAIJ,IAAQnB,EAAM7E,MAAO,UAAW+F,EAAGlB,EAAM7E,UAG3C,IAAgB,IAAuB6E,GAAQ,gBAAgB,WAC7D,IAAIoB,EAAepB,EAAM7E,MACrBkG,EAAgBD,EAAaC,cAC7BjG,EAAWgG,EAAahG,SACxBuD,EAAUyC,EAAazC,QACvBH,EAAO4C,EAAa5C,KACxB,OAAa,IAATA,GACGA,IAAS6C,GAAiB,IAAcvC,MAAM1D,IAAa,IAAOuD,OAGpEqB,EAwFT,OAlJA,IAAUF,EAAQD,GA6DlB,IAAaC,EAAQ,CAAC,CACpBwB,IAAK,wBACLC,MAAO,SAA+BlF,GACpC,IAAImF,EAAOvB,KAAK9E,MAAMqG,KACtB,OAAK,IAAOA,GACQ,WAAhBnF,EAAiC,cAArC,EAD0BmF,IAG3B,CACDF,IAAK,SACLC,MAAO,WACL,IAAIE,EAAexB,KAAK9E,MACpBuG,EAASD,EAAaC,OACtBC,EAAWF,EAAaE,SACxB3C,EAAWyC,EAAazC,SACxBC,EAAQwC,EAAaxC,MACrB7D,EAAWqG,EAAarG,SACxBwG,EAAWH,EAAaG,SACxBvG,EAAYoG,EAAapG,UACzBE,EAAQkG,EAAalG,MACrB4D,EAAUsC,EAAatC,QACvBR,EAAU8C,EAAa9C,QACvBmC,EAAWW,EAAaX,SACxBtF,EAAUiG,EAAajG,QACvB4D,EAAQqC,EAAarC,MACrBZ,EAAOiD,EAAajD,KACpBpB,EAAWqE,EAAarE,SACxBwD,EAAQa,EAAab,MACrBS,EAAgBI,EAAaJ,cAC7BQ,EAAUJ,EAAaI,QACvBvC,EAAWmC,EAAanC,SACxBC,EAAWkC,EAAalC,SACxBnB,EAAUqD,EAAarD,QACvBoB,EAAYiC,EAAajC,UACzBnB,EAAOoD,EAAapD,KACpBoB,EAASgC,EAAahC,OACtBqC,EAAc,IAAGvG,EAAO8C,EAAM,YAAWqD,EAAQ,UAAW,YAAWzC,EAAO,SAAU,YAAW2C,EAAU,YAAa,YAAWzC,EAAS,WAAY,YAAWC,EAAO,SAAU,YAAWa,KAAK8B,eAAgB,QAAS,YAAW3E,EAAU,YAAa,YAAWyE,EAAS,WAAY,YAAWvC,EAAU,YAAa,YAAWC,EAAU,YAAa,YAAWnB,EAAS,WAAY,YAAWoB,EAAW,aAAc,YAAWC,EAAQ,UAAW,YAAoBkC,EAAU,YAAa,YAAoB3C,EAAU,aAChhBgD,EAAiB,IAAG,YAAoBX,KAAmBT,EAAO,YAClEqB,EAAiB,IAAG,YAAWnB,EAAU,YAAa,YAAetF,EAAS,YAC9EW,EAAO,OAAAC,EAAA,GAAkB0D,EAAQG,KAAK9E,OACtCkB,EAAc,OAAAC,EAAA,GAAewD,EAAQG,KAAK9E,MAAO8E,KAAKiC,oBACtDnB,EAAWd,KAAKkC,gBAAgB9F,GAEpC,IAAK,IAAOuE,GAAQ,CAClB,IAAIwB,EAAgB,IAAG,KAAMN,EAAa,SAAUzG,GAChDgH,EAAmB,IAAG,KAAML,EAAgB,SAAU3G,EAAW4G,GACjEK,EAAeC,EAAA,EAAM7F,OAAOkE,EAAO,CACrC4B,aAAc,CACZvD,OAAO,EACPwD,SAA4B,SAAlBpB,EAA2B,QAAU,QAEjDqB,iBAAiB,IAEnB,OAAO,IAAMnG,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACzDd,UAAWgH,EACXM,QAAS1C,KAAK2C,cACM,SAAlBvB,GAA4BiB,EAAc,IAAM/F,cAAcsG,EAAA,EAAK,CACrEC,SAAU7C,KAAKe,KACd,IAAMzE,cAAc,SAAU,CAC/BlB,UAAW+G,EACX,eAAgB3C,IAAWiC,OAASqB,EACpCjC,SAAUA,EACVC,SAAUA,GACTiC,EAAA,EAAKtG,OAAO8B,EAAM,CACnBkE,iBAAiB,IACf,IAAK/D,KAA8B,UAAlB0C,IAA8BA,IAAkBiB,GAGvE,IAAIpG,EAAU,IAAG,KAAM4F,EAAaG,EAAgBD,EAAgB,SAAU3G,GAC1E4H,GAAe,IAAcnE,MAAM1D,GACnCoG,EAAOvB,KAAKiD,sBAAsB7G,GACtC,OAAO,IAAME,cAAcsG,EAAA,EAAK,CAC9BC,SAAU7C,KAAKe,KACd,IAAMzE,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACrDd,UAAWa,EACX,eAAgBuD,IAAWiC,OAASqB,EACpCjC,SAAUA,GAA4B,WAAhBzE,QAA4B0G,EAClDJ,QAAS1C,KAAK2C,YACdpB,KAAMA,EACNT,SAAUA,IACRkC,GAAe7H,GAAW6H,GAAeD,EAAA,EAAKtG,OAAO8B,EAAM,CAC7DkE,iBAAiB,KACdO,GAAetE,QAIjBmB,EAnJiB,CAoJxB,aAEF,IAAgB,EAAQ,eAAgB,CACtC5B,GAAI,WAGN,IAAgB,EAAQ,UAAW,GAEnC,IAAgB,EAAQ,QAAS,GAEjC,IAAgB,EAAQ,KAAM,GAE9B,IAAgB,EAAQ,eAAgB,CAAC,SAAU,WAAY,KAAM,WAAY,QAAS,WAAY,WAAY,YAAa,QAAS,UAAW,UAAW,WAAY,UAAW,QAAS,OAAQ,WAAY,QAAS,gBAAiB,UAAW,WAAY,UAAW,WAAY,UAAW,OAAQ,YAAa,OAAQ,WAAY,WAE9U,EAAOzB,UA0FH,GACJ,EAAOC,OAAS,YAAuB,GAAQ,SAAU6E,GACvD,MAAO,CACL5C,QAAS4C,MAGE,a,uFC3RT4B,E,gLACFC,OAAA,WACI,OACI,6BACI,kBAAC,IAAD,CAAQjF,KAAK,gDAAgD5C,MAAM,aACnE,kBAAC,IAAD,CAAMkD,KAAK,cADX,cAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMA,KAAK,eADf,0BAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMA,KAAK,aADf,sB,GAVY4E,aAkBbF","file":"component---src-pages-index-tsx-996db25768449f434a07.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport HeaderMenu from \"../components/HeaderMenu/HeaderMenu\";\nimport { withLayout, LayoutProps, menuItems } from \"../components/Layout\";\nimport {\n  Button,\n  Segment,\n  Container,\n  Grid,\n  Header,\n  Icon,\n} from \"semantic-ui-react\";\nimport SocialButtons from \"../components/Buttons/Buttons\";\n\nconst IndexPage = (props: LayoutProps) =>\n  <div>\n    {/* Master head */}\n    <Segment vertical inverted textAlign=\"center\" className=\"masthead\">\n      <HeaderMenu\n        Link={Link} pathname={props.location.pathname} items={menuItems} inverted\n      />\n      <Container text>\n        <Header inverted as=\"h1\">Barrington Book Club</Header>\n        <Header inverted as=\"h2\">Website to keep track and post about your favorite books</Header>\n        <Button href=\"/blog\"primary size=\"huge\">Get started!</Button>\n      </Container>\n    </Segment>\n\n    {/* About this starter */}\n    <Segment vertical className=\"stripe\">\n      <Grid stackable verticalAlign=\"middle\" className=\"container\">\n        <Grid.Row>\n          <Grid.Column width=\"8\">\n            <Header>Sign up and learn more about the club</Header>\n            <p>\n            “Good friends, good books, and a sleepy conscience: this is the ideal life.”\n                </p>\n            <Header>Add Recommendations</Header>\n            <p>\n            Feel free to add suggestions to the club about certain upcoming genres.\n                </p>\n          </Grid.Column>\n          <Grid.Column width=\"6\" floated=\"right\">\n            <img src={'https://media.giphy.com/media/NFA61GS9qKZ68/source.gif'} alt=\"Cat\">\n            </img>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n\n    {/* Key features */}\n    <Segment vertical className=\"stripe alternate feature\">\n      <Grid columns=\"3\" textAlign=\"center\" divided relaxed stackable className=\"container\">\n        <Grid.Row>\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"wizard\"></Icon>\n              A kind of magic!\n            </Header>\n            <p>\n              Sharing Knowledge is one way we can all connect with each other.\n                </p>\n          </Grid.Column>\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"wizard\"></Icon>\n              Another kind of magic!\n            </Header>\n            <p>\n              Meeting like minded people through books can be a productive way of finding common interest.\n                </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n     <SocialButtons />\n    </Segment>\n  </div>;\n\nexport default withLayout(IndexPage);\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport Ref from '../../addons/Ref';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button = /*#__PURE__*/function (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _invoke(_this.ref.current, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"computeButtonAriaRole\",\n    value: function computeButtonAriaRole(ElementType) {\n      var role = this.props.role;\n      if (!_isNil(role)) return role;\n      if (ElementType !== 'button') return 'button';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(Ref, {\n          innerRef: this.ref\n        }, React.createElement(\"button\", {\n          className: buttonClasses,\n          \"aria-pressed\": toggle ? !!active : undefined,\n          disabled: disabled,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content)), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      var role = this.computeButtonAriaRole(ElementType);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf([].concat(_toConsumableArray(SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;","import React, { Component } from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\n\nclass SocialButtons extends Component {\n    render() {\n        return (\n            <div>\n                <Button href=\"https://www.instagram.com/barringtonbookclub/\" color='instagram'>\n                <Icon name='instagram' /> Instagram\n                </Button>\n                <Button>\n                    <Icon name='slack hash' /> Slack Channel(coming)\n                </Button>\n                <Button>\n                    <Icon name='exchange' /> Sell your books\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default SocialButtons;"],"sourceRoot":""}